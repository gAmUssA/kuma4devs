plugins {
  id("com.github.johnrengelman.shadow") version "8.1.1"
  id("io.micronaut.application") version "4.0.3"
  id("io.micronaut.aot") version "4.0.3"
  id("com.google.cloud.tools.jib") version "3.3.2"
}

version = "0.1"
group = "sh.kongme.work"

repositories {
  mavenCentral()
}

dependencies {
  annotationProcessor("org.projectlombok:lombok")
  annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
  implementation("io.micronaut:micronaut-http-client")
  implementation("io.micronaut.serde:micronaut-serde-jackson")
  implementation("org.yaml:snakeyaml")
  compileOnly("org.projectlombok:lombok")
  runtimeOnly("ch.qos.logback:logback-classic")
}

application {
  mainClass.set("sh.kongme.work.WorkApplication")
}
java {
  sourceCompatibility = JavaVersion.toVersion("17")
  targetCompatibility = JavaVersion.toVersion("17")
}

dockerBuild {
  images = ["gamussa/mesh4java-work:latest"]
}

dockerBuildNative {
  images = ["gamussa/mesh4java-work:latest"]
}

tasks {
  jib {
    from {
      image = "bellsoft/liberica-openjdk-alpine"
      platforms {
        platform {
          architecture = "amd64"
          os = "linux"
        }
        platform {
          architecture = "arm64"
          os = "linux"
        }
      }
    }
    to {
      image = "gamussa/mesh4java-work"
    }
  }
}

graalvmNative.toolchainDetection = false
micronaut {
  runtime("netty")
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("sh.kongme.work.*")
  }
  aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
    optimizeServiceLoading = false
    convertYamlToJava = false
    precomputeOperations = true
    cacheEnvironment = true
    optimizeClassLoading = true
    deduceEnvironment = true
    optimizeNetty = true
  }
}



